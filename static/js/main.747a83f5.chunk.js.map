{"version":3,"sources":["components/ImageCard/ImageCard.js","assets/images/loading.gif","components/loader/Loader.js","components/backdrop/Backdrop.js","components/dateSelection/DateSelection.js","pages/Home.js","App.js","index.js"],"names":["ImageCard","props","hdurl","date","explanation","title","thumbnail_url","media_type","useState","liked","setLiked","className","src","alt","onClick","Loader","loaderGif","Backdrop","children","motion","div","initial","opacity","animate","exit","DateSelection","startDate","endDate","handleStartDate","handleEndDate","apiRequest","loading","close","e","stopPropagation","variants","hidden","y","visible","transition","duration","type","damping","stiffness","htmlFor","name","value","onChange","API_KEY","process","Home","setStartDate","setEndDate","setLoading","imageData","setImageData","imageArrayData","setImageArrayData","modalOpen","setModelOpen","enteredStartDate","Date","getTime","enteredEndDate","todayDate","toast","error","toastId","position","POSITION","TOP_CENTER","req","res","a","fetch","json","data","button","whileHover","scale","whileTap","AnimatePresence","exitBeforeEnter","target","map","imageContent","url","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.747a83f5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ImageCard.css\";\r\n\r\nconst ImageCard = props => {\r\n  const { hdurl, date, explanation, title, thumbnail_url, media_type } = props;\r\n  //  sets like status for each image\r\n  const [liked, setLiked] = useState(false);\r\n  return (\r\n    <div className=\"card\">\r\n      {media_type === \"video\" ? (\r\n        <img className=\"space-img\" src={thumbnail_url} alt={title} />\r\n      ) : (\r\n        <img className=\"space-img\" src={hdurl} alt={title} />\r\n      )}\r\n\r\n      <p className=\"title\">{title}</p>\r\n      <p className=\"date\">{date}</p>\r\n      <p className=\"explanation\">{explanation}</p>\r\n      <div className=\"like-container\">\r\n        {liked ? (\r\n          <button className=\"like-button\" onClick={() => setLiked(false)}>\r\n            Unlike\r\n          </button>\r\n        ) : (\r\n          <button className=\"like-button\" onClick={() => setLiked(true)}>\r\n            Like\r\n          </button>\r\n        )}\r\n        <p className=\"like-counter\">Likes : {liked ? 1 : 0}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","import React from \"react\";\r\nimport loaderGif from \"../../assets/images/loading.gif\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img src={loaderGif} alt=\"loading gif\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./Backdrop.css\";\r\n\r\n// this is the backdrop for the modal, which is passed through props via children\r\n\r\nconst Backdrop = ({ children, onClick }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={onClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}>\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { useState } from \"react\";\r\nimport \"./DateSelection.css\";\r\nimport Loader from \"../loader/Loader\";\r\nimport { motion } from \"framer-motion\";\r\nimport Backdrop from \"../backdrop/Backdrop\";\r\n\r\nconst DateSelection = props => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    handleStartDate,\r\n    handleEndDate,\r\n    apiRequest,\r\n    loading,\r\n    close,\r\n  } = props;\r\n\r\n  // options for animations through framer-motion\r\n\r\n  const dropIn = {\r\n    hidden: {\r\n      y: \"-100vh\",\r\n      opacity: 0,\r\n    },\r\n    visible: {\r\n      y: \"0\",\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.1,\r\n        type: \"spring\",\r\n        damping: 100,\r\n        stiffness: 300,\r\n      },\r\n    },\r\n    exit: {\r\n      y: \"100vh\",\r\n      opacity: 0,\r\n      transition: {\r\n        duration: 2,\r\n        damping: 100,\r\n        stiffness: 300,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Backdrop onClick={close}>\r\n      <motion.div\r\n        onClick={e => e.stopPropagation()}\r\n        variants={dropIn}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n        className=\"date-selection-wrapper\">\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <div className=\"start-date-wrapper\">\r\n              <p>1.) Pick your Start Date</p>\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={startDate}\r\n                onChange={handleStartDate}\r\n              />\r\n            </div>\r\n            <div className=\"end-date-wrapper\">\r\n              <p>2.) Pick your End Date range (optional)</p>\r\n              <label htmlFor=\"endDate\">End Date</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                value={endDate}\r\n                onChange={handleEndDate}\r\n              />\r\n            </div>\r\n            <div className=\"button-wrapper\">\r\n              <p>3.) Submit your request for some amazing pictures!</p>\r\n              <button\r\n                onClick={() => {\r\n                  apiRequest();\r\n                  close();\r\n                }}\r\n                className=\"send-button\">\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </motion.div>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default DateSelection;\r\n","import React, { useState } from \"react\";\r\nimport ImageCard from \"../components/ImageCard/ImageCard\";\r\nimport DateSelection from \"../components/dateSelection/DateSelection\";\r\nimport \"./Home.css\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport Loader from \"../components/loader/Loader\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//  customId for toastify\r\nconst customId = \"custom-id-yes\";\r\n\r\n//  api key for nasa api\r\nconst API_KEY = process.env.REACT_APP_NASA_API_KEY;\r\n\r\nconst Home = () => {\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  //   if there is one image, it is stored in this state\r\n  const [imageData, setImageData] = useState();\r\n  //   if there is an array of multiple images, they will be stored in this state\r\n  const [imageArrayData, setImageArrayData] = useState([]);\r\n  const [modalOpen, setModelOpen] = useState(false);\r\n  const close = () => setModelOpen(false);\r\n  const open = () => setModelOpen(true);\r\n\r\n  //   function for toast functionality\r\n  const notify = () => {\r\n    toast.error(\"Sorry, you can't pull images from the future\", {\r\n      toastId: customId,\r\n      position: toast.POSITION.TOP_CENTER,\r\n    });\r\n  };\r\n\r\n  //  gets epoch eunix time for start and end date to compare with current epoch eunix time to prevent selection of a future date for image search\r\n\r\n  let enteredStartDate = new Date(startDate).getTime();\r\n  let enteredEndDate = new Date(endDate).getTime();\r\n  let todayDate = new Date();\r\n  if (enteredStartDate > todayDate || enteredEndDate > todayDate) {\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    return notify();\r\n  }\r\n\r\n  //    api request for nasa api\r\n\r\n  const apiRequest = async (req, res) => {\r\n    if (startDate && endDate) {\r\n      setLoading(true);\r\n      res = await fetch(\r\n        `https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&start_date=${startDate}&end_date=${endDate}&thumbs=true`\r\n      );\r\n      let data = await res.json();\r\n      setLoading(false);\r\n      setImageArrayData(data);\r\n    }\r\n    res = await fetch(\r\n      `https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&date=${startDate}`\r\n    );\r\n    let data = await res.json();\r\n    setImageData(data);\r\n  };\r\n\r\n  const handleStartDate = e => {\r\n    setStartDate(e.target.value);\r\n  };\r\n  const handleEndDate = e => {\r\n    setEndDate(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-wrapper\">\r\n      <div className=\"intro-wrapper\">\r\n        <h1>Welcome to Spacetagram</h1>\r\n        <h3>\r\n          where you can bring all of the images of space right to your home\r\n        </h3>\r\n        <h5 className=\"tooltips\">\r\n          How It Works\r\n          <span className=\"tooltiptext\">\r\n            This App uses an API that stores 1 image every day. Click on the\r\n            button below to either enter 1 specific date, or a range of dates.\r\n            You cannot pull images from the future, we are good, but not that\r\n            good\r\n          </span>\r\n        </h5>\r\n\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          className=\"open-button\"\r\n          onClick={modalOpen ? close : open}>\r\n          Enter Dates\r\n        </motion.button>\r\n      </div>\r\n      <AnimatePresence initial={false} exitBeforeEnter={true}>\r\n        {modalOpen && (\r\n          <DateSelection\r\n            loading={loading}\r\n            startDate={startDate}\r\n            handleStartDate={handleStartDate}\r\n            endDate={endDate}\r\n            handleEndDate={handleEndDate}\r\n            apiRequest={apiRequest}\r\n            close={close}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"image-card-container\">\r\n          {imageArrayData &&\r\n            imageArrayData.map(imageContent => (\r\n              <ImageCard\r\n                date={imageContent.date}\r\n                explanation={imageContent.explanation}\r\n                hdurl={imageContent.hdurl}\r\n                title={imageContent.title}\r\n                thumbnail_url={\r\n                  imageContent.thumbnail_url ? imageContent.thumbnail_url : \"\"\r\n                }\r\n                url={imageContent.url}\r\n                media_type={imageContent.media_type}\r\n              />\r\n            ))}\r\n          {imageData && (\r\n            <ImageCard\r\n              date={imageData.date}\r\n              explanation={imageData.explanation}\r\n              hdurl={imageData.hdurl}\r\n              title={imageData.title}\r\n              thumbnail_url={\r\n                imageData.thumbnail_url ? imageData.thumbnail_url : \"\"\r\n              }\r\n              url={imageData.url}\r\n              media_type={imageData.media_type}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\nimport { ToastContainer } from \"react-toastify\";\nfunction App() {\n  return (\n    <div>\n      <Home />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}