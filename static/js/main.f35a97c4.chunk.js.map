{"version":3,"sources":["components/ImageCard/ImageCard.js","assets/images/loading.gif","components/loader/Loader.js","components/dateSelection/DateSelection.js","pages/Home.js","App.js","index.js"],"names":["ImageCard","props","hdurl","date","explanation","title","thumbnail_url","media_type","useState","liked","setLiked","className","src","alt","onClick","Loader","loaderGif","DateSelection","startDate","endDate","handleStartDate","handleEndDate","apiRequest","loading","htmlFor","type","name","value","onChange","API_KEY","process","Home","setStartDate","setEndDate","setLoading","imageData","setImageData","imageArrayData","setImageArrayData","req","res","a","fetch","json","data","console","log","e","target","map","imageContent","url","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAkCeA,EA/BG,SAAAC,GAAU,IAClBC,EAA+DD,EAA/DC,MAAOC,EAAwDF,EAAxDE,KAAMC,EAAkDH,EAAlDG,YAAaC,EAAqCJ,EAArCI,MAAOC,EAA8BL,EAA9BK,cAAeC,EAAeN,EAAfM,WAD/B,EAGCC,oBAAS,GAHV,mBAGlBC,EAHkB,KAGXC,EAHW,KAIzB,OACE,sBAAKC,UAAU,OAAf,UACkB,UAAfJ,EACC,qBAAKI,UAAU,YAAYC,IAAKN,EAAeO,IAAKR,IAEpD,qBAAKM,UAAU,YAAYC,IAAKV,EAAOW,IAAKR,IAG9C,mBAAGM,UAAU,QAAb,SAAsBN,IACtB,mBAAGM,UAAU,OAAb,SAAqBR,IACrB,mBAAGQ,UAAU,cAAb,SAA4BP,IAC5B,sBAAKO,UAAU,iBAAf,UACGF,EACC,wBAAQE,UAAU,cAAcG,QAAS,kBAAMJ,GAAS,IAAxD,oBAIA,wBAAQC,UAAU,cAAcG,QAAS,kBAAMJ,GAAS,IAAxD,kBAIF,oBAAGC,UAAU,eAAb,qBAAqCF,EAAQ,EAAI,YC5B1C,G,MAAA,IAA0B,qCCW1BM,EARA,WACb,OACE,qBAAKJ,UAAU,SAAf,SACE,qBAAKC,IAAKI,EAAWH,IAAI,mBC8ChBI,EAhDO,SAAAhB,GAAU,IAE5BiB,EAMEjB,EANFiB,UACAC,EAKElB,EALFkB,QACAC,EAIEnB,EAJFmB,gBACAC,EAGEpB,EAHFoB,cACAC,EAEErB,EAFFqB,WACAC,EACEtB,EADFsB,QAGF,OACE,qBAAKZ,UAAU,yBAAf,SACGY,EACC,cAAC,EAAD,IAEA,qCACE,sBAAKZ,UAAU,qBAAf,UACE,+DACA,uBAAOa,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLC,KAAK,YACLC,MAAOT,EACPU,SAAUR,OAGd,sBAAKT,UAAU,mBAAf,UACE,wEACA,uBAAOa,QAAQ,UAAf,sBACA,uBACEC,KAAK,OACLC,KAAK,UACLC,MAAOR,EACPS,SAAUP,OAGd,sBAAKV,UAAU,iBAAf,UACE,mFACA,wBAAQG,QAASQ,EAAYX,UAAU,cAAvC,2BCtCNkB,G,MAAUC,4CA8EDC,EA5EF,WAAO,IAAD,EACiBvB,mBAAS,IAD1B,mBACVU,EADU,KACCc,EADD,OAEaxB,mBAAS,IAFtB,mBAEVW,EAFU,KAEDc,EAFC,OAGazB,oBAAS,GAHtB,mBAGVe,EAHU,KAGDW,EAHC,OAIiB1B,qBAJjB,mBAIV2B,EAJU,KAICC,EAJD,OAK2B5B,mBAAS,IALpC,mBAKV6B,EALU,KAKMC,EALN,KAOXhB,EAAU,uCAAG,WAAOiB,EAAKC,GAAZ,iBAAAC,EAAA,0DACbvB,IAAaC,EADA,wBAEfe,GAAW,GAFI,SAGHQ,MAAM,+CAAD,OACgCb,EADhC,uBACsDX,EADtD,qBAC4EC,EAD5E,iBAHF,cAGfqB,EAHe,gBAMEA,EAAIG,OANN,OAMXC,EANW,OAOfV,GAAW,GACXI,EAAkBM,GARH,yBAWLF,MAAM,+CAAD,OACgCb,EADhC,iBACgDX,IAZhD,eAWjBsB,EAXiB,iBAcAA,EAAIG,OAdJ,QAcbC,EAda,OAejBR,EAAaQ,GAfI,4CAAH,wDA0BhB,OAFAC,QAAQC,IAAIT,GAGV,sBAAK1B,UAAU,eAAf,UACE,cAAC,EAAD,CACEY,QAASA,EACTL,UAAWA,EACXE,gBAbkB,SAAA2B,GACtBf,EAAae,EAAEC,OAAOrB,QAalBR,QAASA,EACTE,cAZgB,SAAA0B,GACpBd,EAAWc,EAAEC,OAAOrB,QAYhBL,WAAYA,IAEd,sBAAKX,UAAU,uBAAf,UACG0B,GACCA,EAAeY,KAAI,SAAAC,GAAY,OAC7B,cAAC,EAAD,CACE/C,KAAM+C,EAAa/C,KACnBC,YAAa8C,EAAa9C,YAC1BF,MAAOgD,EAAahD,MACpBG,MAAO6C,EAAa7C,MACpBC,cACE4C,EAAa5C,cAAgB4C,EAAa5C,cAAgB,GAE5D6C,IAAKD,EAAaC,IAClB5C,WAAY2C,EAAa3C,gBAG9B4B,GACC,cAAC,EAAD,CACEhC,KAAMgC,EAAUhC,KAChBC,YAAa+B,EAAU/B,YACvBF,MAAOiC,EAAUjC,MACjBG,MAAO8B,EAAU9B,MACjBC,cACE6B,EAAU7B,cAAgB6B,EAAU7B,cAAgB,GAEtD6C,IAAKhB,EAAUgB,IACf5C,WAAY4B,EAAU5B,oBC/DnB6C,MARf,WACE,OACE,8BACE,cAAC,EAAD,O,MCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f35a97c4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ImageCard.css\";\r\n\r\nconst ImageCard = props => {\r\n  const { hdurl, date, explanation, title, thumbnail_url, media_type } = props;\r\n\r\n  const [liked, setLiked] = useState(false);\r\n  return (\r\n    <div className=\"card\">\r\n      {media_type === \"video\" ? (\r\n        <img className=\"space-img\" src={thumbnail_url} alt={title} />\r\n      ) : (\r\n        <img className=\"space-img\" src={hdurl} alt={title} />\r\n      )}\r\n\r\n      <p className=\"title\">{title}</p>\r\n      <p className=\"date\">{date}</p>\r\n      <p className=\"explanation\">{explanation}</p>\r\n      <div className=\"like-container\">\r\n        {liked ? (\r\n          <button className=\"like-button\" onClick={() => setLiked(false)}>\r\n            Unlike\r\n          </button>\r\n        ) : (\r\n          <button className=\"like-button\" onClick={() => setLiked(true)}>\r\n            Like\r\n          </button>\r\n        )}\r\n        <p className=\"like-counter\">Likes : {liked ? 1 : 0}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","import React from \"react\";\r\nimport loaderGif from \"../../assets/images/loading.gif\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img src={loaderGif} alt=\"loading gif\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from \"react\";\r\nimport \"./DateSelection.css\";\r\nimport Loader from \"../loader/Loader\";\r\n\r\nconst DateSelection = props => {\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    handleStartDate,\r\n    handleEndDate,\r\n    apiRequest,\r\n    loading,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"date-selection-wrapper\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div className=\"start-date-wrapper\">\r\n            <p>1.) Pick your Start Date range</p>\r\n            <label htmlFor=\"startDate\">Start Date</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"startDate\"\r\n              value={startDate}\r\n              onChange={handleStartDate}\r\n            />\r\n          </div>\r\n          <div className=\"end-date-wrapper\">\r\n            <p>2.) Pick your End Date range (optional)</p>\r\n            <label htmlFor=\"endDate\">End Date</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"endDate\"\r\n              value={endDate}\r\n              onChange={handleEndDate}\r\n            />\r\n          </div>\r\n          <div className=\"button-wrapper\">\r\n            <p>3.) Submit your request for some amazing pictures!</p>\r\n            <button onClick={apiRequest} className=\"send-button\">\r\n              Send\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateSelection;\r\n","import React, { useState } from \"react\";\r\nimport ImageCard from \"../components/ImageCard/ImageCard\";\r\nimport DateSelection from \"../components/dateSelection/DateSelection\";\r\nimport \"./Home.css\";\r\nconst API_KEY = process.env.REACT_APP_NASA_API_KEY;\r\n\r\nconst Home = () => {\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageData, setImageData] = useState();\r\n  const [imageArrayData, setImageArrayData] = useState([]);\r\n\r\n  const apiRequest = async (req, res) => {\r\n    if (startDate && endDate) {\r\n      setLoading(true);\r\n      res = await fetch(\r\n        `https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&start_date=${startDate}&end_date=${endDate}&thumbs=true`\r\n      );\r\n      let data = await res.json();\r\n      setLoading(false);\r\n      setImageArrayData(data);\r\n    }\r\n\r\n    res = await fetch(\r\n      `https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&date=${startDate}`\r\n    );\r\n    let data = await res.json();\r\n    setImageData(data);\r\n  };\r\n\r\n  const handleStartDate = e => {\r\n    setStartDate(e.target.value);\r\n  };\r\n  const handleEndDate = e => {\r\n    setEndDate(e.target.value);\r\n  };\r\n  console.log(imageArrayData);\r\n\r\n  return (\r\n    <div className=\"main-wrapper\">\r\n      <DateSelection\r\n        loading={loading}\r\n        startDate={startDate}\r\n        handleStartDate={handleStartDate}\r\n        endDate={endDate}\r\n        handleEndDate={handleEndDate}\r\n        apiRequest={apiRequest}\r\n      />\r\n      <div className=\"image-card-container\">\r\n        {imageArrayData &&\r\n          imageArrayData.map(imageContent => (\r\n            <ImageCard\r\n              date={imageContent.date}\r\n              explanation={imageContent.explanation}\r\n              hdurl={imageContent.hdurl}\r\n              title={imageContent.title}\r\n              thumbnail_url={\r\n                imageContent.thumbnail_url ? imageContent.thumbnail_url : \"\"\r\n              }\r\n              url={imageContent.url}\r\n              media_type={imageContent.media_type}\r\n            />\r\n          ))}\r\n        {imageData && (\r\n          <ImageCard\r\n            date={imageData.date}\r\n            explanation={imageData.explanation}\r\n            hdurl={imageData.hdurl}\r\n            title={imageData.title}\r\n            thumbnail_url={\r\n              imageData.thumbnail_url ? imageData.thumbnail_url : \"\"\r\n            }\r\n            url={imageData.url}\r\n            media_type={imageData.media_type}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}